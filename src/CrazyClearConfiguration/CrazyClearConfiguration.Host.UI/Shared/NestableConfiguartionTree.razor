@using System.Dynamic
@using System.Collections

@foreach (var (key, value) in Config) {
    if (value is ExpandoObject) {
        <MudTreeViewItem Value="@key" UserAttributes="@GetAttributes(key)" IconColor="Color.Success">
            <NestableConfiguartionTree config="@value" ParentKey="@GetParentKey(key)" />
        </MudTreeViewItem>
    }
    else if (value is IList) {
        <MudTreeViewItem Value="@key" UserAttributes="@GetAttributes(key)" IconColor="Color.Success">
            @foreach (var listItem in (IEnumerable) value!) {
                <MudTreeViewItem Value="listItem"/>
            }
        </MudTreeViewItem>
    }
    else {
        <MudTreeViewItem Value="@key" IconColor="Color.Success">
            <MudTreeViewItem Value="value" IconColor="Color.Success"/>
        </MudTreeViewItem>
    }
}

@code {

    [Parameter]
    public ExpandoObject Config { get; set; }

    [Parameter]
    public string ParentKey { get; set; }

    private Dictionary<string, object> GetAttributes(string key) {
        return new Dictionary<string, object>() {
            {"data-key", GetParentKey(key)}
        };
    }
    
    private string GetParentKey(string key) {
        return $"{ParentKey ?? ""}{key}";
    }
}