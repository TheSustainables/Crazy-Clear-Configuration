@page "/config-viewer/{configProfileName}"
@using System.Dynamic
@using System.IO
@using CrazyClearConfiguration.Adapter.Configuration.Json
@using CrazyClearConfiguration.Adapter.Profile.Json
@using CrazyClearConfiguration.Core.Ports
@using CrazyClearConfiguration.Core.UseCases
@using Microsoft.AspNetCore.Hosting
@using Microsoft.Extensions.Logging
@inject ILogger<ConfigViewer> Logger
@inject IWebHostEnvironment Environment

@if (config != null) {
    <TrySomething />
    <MudPaper Elevation="0">
        <MudTreeView T="string" CanHover="true">
            <NestableConfiguartionTree config="@config" />
        </MudTreeView>
    </MudPaper>
}

@code {
    [Parameter]
    public string configProfileName{ get; set; }
    private ConfigProfile configProfile;
    private ExpandoObject? config;
    private string configType;
    
    protected override async Task OnInitializedAsync()
    {
        var adapter = new JsonProfileAdaptor();
        var usecase = new GetProfileUseCase(adapter);
        configProfile = await usecase.Execute("connectionData");
        var chosenProfile = configProfile.ConfigSources.SingleOrDefault(source => source.Name == configProfileName) as JsonConfigSource;
        if (chosenProfile != null)
        {
            var configAdapter = new JsonConfigAdaptor(chosenProfile.FilePath);
            var configUsecase = new GetConfigurationUseCase(configAdapter);
            config = await configUsecase.Execute();
        }
    }
}